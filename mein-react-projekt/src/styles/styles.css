.App {
  display: flex; /* Verwenden Sie Flexbox, um den Inhalt anzuordnen */
  justify-content: space-between; /* Platzieren Sie den Inhalt am linken und rechten Rand */
}

.context-menu {
  background: white;
  border-style: solid;
  box-shadow: 10px 19px 20px rgba(0, 0, 0, 10%);
  position: absolute;
  z-index: 10;
}

.context-menu button {
  border: none;
  display: block;
  padding: 0.5em;
  text-align: left;
  width: 100%;
}

.context-menu button:hover {
  background: white;
}

.react-flow__node {
  height:50px;
  width: 50px;
  font-size: 8px;
  background: #eee;
  border: 1px solid #555;
  border-radius: 5px;
  text-align: center;
}
/*
Dicker Rand für Endzustand
 */
/* Regel für Nodes mit zwei Rahmenlinien */
.react-flow__node[data-id="Endzustand"] {
  background: lightgreen; /* Hintergrundfarbe anpassen */
  font-weight: bold; /* Schriftart anpassen */
  position: relative; /* Position relativ setzen */
  border-radius: 2px; /* Randradius anpassen */
}

/* Erste Rahmenlinie */
.react-flow__node[data-id="Endzustand"]::before {
  content: '';
  position: absolute;
  top: -2px; /* Abstand von oben */
  left: -2px; /* Abstand von links */
  right: -2px; /* Abstand von rechts */
  bottom: -2px; /* Abstand von unten */
  border: 1px solid black; /* Erste Rahmenlinie */
  border-radius: 5px; /* Randradius anpassen */
}
/* Zweite Rahmenlinie */
.react-flow__node[data-id="Endzustand"]::after {
  content: '';
  position: absolute;
  top: -4px; /* Abstand von oben */
  left: -4px; /* Abstand von links */
  right: -4px; /* Abstand von rechts */
  bottom: -4px; /* Abstand von unten */
  border: 1px solid black; /* Zweite Rahmenlinie */
  border-radius: 5px; /* Randradius anpassen */
  z-index: -1; /* Hinter die erste Rahmenlinie legen */
}

.react-flow__node[data-id="input"] {
  border: 2px solid black;
  background: lightgreen;
}
/* Regel für den Pfeil am Knoten mit ID "input" */

.react-flow__node[data-id="input"]::before {
  content: ''; /* Leerer Inhalt */
  position: absolute; /* Absolute Positionierung relativ zum Elternelement */
  top: 50%; /* Vertikale Ausrichtung auf 50% des Knotens */
  left: -10px; /* Horizontaler Abstand zum Knoten */
  border: solid transparent; /* Transparenter Rand */
  border-left-color: #555; /* Farbe des Pfeils (hier: grau) */
  border-width: 5px; /* Breite des Pfeils */
  width: 0;
  height: 0;
  transform: translateY(-50%); /* Vertikale Ausrichtung zentrieren */
}
.react-flow__node[data-id="input"]::after {
  content: ''; /* Leerer Inhalt */
  position: absolute; /* Absolute Positionierung relativ zum Elternelement */
  top: 50%; /* Vertikale Ausrichtung auf 50% des Knotens */
  left: -10px; /* Horizontaler Abstand zum Knoten */
  border: solid transparent; /* Transparenter Rand */
  border-left-color: #555; /* Farbe des Pfeils (hier: grau) */
  border-width: 5px; /* Breite des Pfeils */
  width: 0;
  height: 0;
  transform: translateY(-50%); /* Vertikale Ausrichtung zentrieren */
}





.react-flow{
  height: 80vh !important;
  width: 50%;
}

.node {
  height: 50px;
  width: 50px;
  border-radius: 10%;

}
.react-flow__panel.react-flow__attribution.bottom.right {
  display: none;
}


.toptext {
  font-size: 32px;
  font-family: "Apple Braille", serif;
  text-align: center;
}

.Kontrollcontainer{
  border: black solid;
  height: 80vh;
}
.Kontrollcontainer {
  display: flex; /* Aktiviert Flexbox-Layout */
  flex-direction: column; /* Anordnung der Inhalte in Spalten */
  align-items: flex-start; /* Horizontale Ausrichtung */
  justify-content: flex-start; /* Vertikale Ausrichtung */
}


.DFAContainer {
  display: flex;
  align-items: center; /* Zentriert die Inhalte vertikal */
}

.DFAAnzeige {
  /* Abstand zum rechten Rand */
  display: flow-root;
  height: 20px;
  width: 30px;
  padding: 7px;
  border: 1px solid #000;
  font-weight: bold;
  font-family: "Apple Braille", serif;
}

/* Stil für True */
.DFAAnzeige.true {
  color: green;
}

/* Stil für False */
.DFAAnzeige.false {
  color: red;
}


.wrapper {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
  grid-auto-rows: minmax(100px, auto);
}
.one {
  grid-column: 1 / 3;
  grid-row: 1;
}
.two {
  grid-column: 2 / 4;
  grid-row: 1 / 3;
}
.three {
  grid-column: 1;
  grid-row: 2 / 5;
}
.four {
  grid-column: 3;
  grid-row: 3;
}
.five {
  grid-column: 2;
  grid-row: 4;
}
.six {
  grid-column: 3;
  grid-row: 4;
}